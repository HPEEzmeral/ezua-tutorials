apiVersion: "sparkoperator.hpe.com/v1beta2"
kind: SparkApplication
metadata:
  name: "spark-etl"
  namespace: "spark"
spec:
  sparkConf:
    # S3 credentials should be specified below
    spark.hadoop.fs.s3a.endpoint: <s3-endpoint>
    spark.hadoop.fs.s3a.access.key: <access-key>
    spark.hadoop.fs.s3a.secret.key: <secret-key>
    spark.hadoop.fs.s3a.path.style.access: "true"
    spark.hadoop.fs.s3a.impl: "org.apache.hadoop.fs.s3a.S3AFileSystem"
    spark.hadoop.fs.s3a.connection.ssl.enabled: "true"

    # Needed if s3 server is behind proxy
    # spark.hadoop.fs.s3a.proxy.host: "web-proxy.corp.hpecorp.net"
    # spark.hadoop.fs.s3a.proxy.port: "8080"

    # Needed if s3 server certs are not imported to java truststore used by spark
    spark.driver.extraJavaOptions: "-Dcom.amazonaws.sdk.disableCertChecking=true"
    spark.executor.extraJavaOptions: "-Dcom.amazonaws.sdk.disableCertChecking=true"
  type: Python
  sparkVersion: 3.3.1
  mode: cluster
  image: "gcr.io/mapr-252711/spark-py-3.3.1:v3.3.1"
  imagePullPolicy: Always
  mainApplicationFile: "local:///mounts/shared-volume/spark/spark_etl_new.py"
  restartPolicy:
    type: Never
  imagePullSecrets:
    - imagepull
  driver:
    labels:
      version: 3.3.1
    cores: 1
    coreLimit: "1"
    memory: 1g
    serviceAccount: hpe-spark
    volumeMounts:
      - name: {{dag_run.conf.get("username")}}-volume
        mountPath: /mounts/{{dag_run.conf.get("username")}}-volume
      - name: shared-volume
        mountPath: /mounts/shared-volume
  executor:
    labels:
      version: 3.3.1
    cores: 1
    coreLimit: "1"
    memory: 1g
    serviceAccount: hpe-spark
    volumeMounts:
      - name: {{dag_run.conf.get("username")}}-volume
        mountPath: /mounts/{{dag_run.conf.get("username")}}-volume
      - name: shared-volume
        mountPath: /mounts/shared-volume
    instances: 1
  volumes:
    - name: {{dag_run.conf.get("username")}}-volume
      persistentVolumeClaim:
        claimName: {{dag_run.conf.get("username")}}-spark-pvc
    - name: shared-volume
      persistentVolumeClaim:
        claimName: kubeflow-shared-pvc

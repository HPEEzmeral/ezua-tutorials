apiVersion: "sparkoperator.hpe.com/v1beta2"
kind: SparkApplication
metadata:
  name: scala-sql-on-gpu
  namespace: sampletenant
spec:
  sparkConf:
    # Note: If you are executing the application as a K8 user that MapR can verify,
#           you do not need to specify a spark.mapr.user.secret
#    spark.mapr.user.secret: mapr-secret

    # Enabling RAPIDs plugin
    spark.plugins: "com.nvidia.spark.SQLPlugin"
    spark.rapids.sql.enabled: "true"
    spark.rapids.force.caller.classloader: "false"

    # GPU allocation and discovery settings
    spark.task.resource.gpu.amount: "1"
    spark.executor.resource.gpu.amount: "1"
    spark.executor.resource.gpu.vendor: "nvidia.com"
    spark.executor.resource.gpu.discoveryScript: "/opt/mapr/spark/spark-3.3.1/examples/src/main/scripts/getGpusResources.sh"

  type: Scala
  sparkVersion: 3.3.1
  mode: cluster
  image: gcr.io/mapr-252711/spark-gpu-3.3.1:202304252229AN
  imagePullPolicy: Always
  mainApplicationFile: /path/to/examples/jar/file
  mainClass: com.hpe.examples.spark.sql.SqlOnGpuExample
  restartPolicy:
    type: Never
  imagePullSecrets:
    - imagepull
  driver:
    cores: 1
    coreLimit: "1000m"
    memory: "512m"
    labels:
      version: 3.3.1
    # Note: You do not need to specify a serviceAccount
    #       it will be auto-generated referencing the pre-existing "hpe-<namespace>"
  #    serviceAccount: hpe-gputest
  executor:
    cores: 1
    coreLimit: "1000m"
    instances: 1
    memory: "2G"
    gpu:
      name: "nvidia.com/gpu"
      quantity: 1
    labels:
      version: 3.3.1

apiVersion: "sparkoperator.hpe.com/v1beta2"
kind: SparkApplication
metadata:
  name: data-transfer-mnist-s3-secret-demo
  namespace: spark
spec:
  sparkConf:
    spark.hadoop.fs.s3a.path.style.access: "true"
    spark.hadoop.fs.s3a.impl: "org.apache.hadoop.fs.s3a.S3AFileSystem"
    spark.hadoop.fs.s3a.connection.ssl.enabled: "true"
    "spark.driver.extraJavaOptions": "-Dcom.amazonaws.sdk.disableCertChecking=true"
    "spark.executor.extraJavaOptions": "-Dcom.amazonaws.sdk.disableCertChecking=true"
  type: Scala
  sparkVersion: 3.4.0
  mode: cluster
  image: gcr.io/mapr-252711/ezaf-spark-demo-example:fy23-q3-mnist
  imagePullPolicy: Always
  mainApplicationFile: local:///tmp/DataTransfer.jar
  mainClass: com.mapr.sparkdemo.DataTransfer
  arguments:
    - s3a://ezaf-demo/data/mnist
    - binaryFile
    - file:///mounts/data/mnist-spark-data
    - parquet
  restartPolicy:
    type: Never
  imagePullSecrets:
    - hpe-imagepull-secrets
  driver:
    cores: 1
    coreLimit: "1000m"
    memory: "512m"
    labels:
      version: 3.4.0
    volumeMounts:
      - mountPath: /mounts/data/
        name: spark-data
      - mountPath: /opt/mapr/kubernetes/spark_secrets
        name: spark-s3-config
  executor:
    cores: 1
    instances: 2
    memory: "512m"
    labels:
      version: 3.4.0
    volumeMounts:
      - mountPath: /mounts/data
        name: spark-data
      - mountPath: /opt/mapr/kubernetes/spark_secrets
        name: spark-s3-config
  volumes:
    - name: spark-data
      persistentVolumeClaim:
        claimName:  <username>-<namespace>-pvc
    - name: spark-s3-config
      secret:
        secretName: spark-s3-creds
        defaultMode: 400
        optional: false
